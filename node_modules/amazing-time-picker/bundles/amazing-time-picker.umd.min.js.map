{"version":3,"file":"amazing-time-picker.umd.min.js","sources":["~/amazing-time-picker/src/app/atp-library/atp-core.service.ts","~/amazing-time-picker/src/app/atp-library/time-picker/time-picker.component.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker/atp-time-picker.component.ts","~/amazing-time-picker/src/app/atp-library/preferences.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker.service.ts","~/amazing-time-picker/src/app/atp-library/atp.directive.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ITime } from './definitions';\nexport class AtpCoreService {\nconstructor() { }\n/**\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\npublic allowedTimes (min, max) {\n    const /** @type {?} */ allTimes = [];\n    const /** @type {?} */ nowMinHour = +min.split(':')[0];\n    const /** @type {?} */ nowMaxHour = +max.split(':')[0];\n    const /** @type {?} */ nowMinMin = +min.split(':')[1];\n    const /** @type {?} */ nowMaxMin = +max.split(':')[1];\n    for (let /** @type {?} */ i = nowMinHour; i <= nowMaxHour; i++) {\n      let /** @type {?} */ j = 0, /** @type {?} */\n          jDest = 59;\n      if (i === nowMinHour) {\n        j = nowMinMin;\n      }else if (i === nowMaxHour) {\n        jDest = nowMaxMin;\n      }\n      for (j; j <= jDest; j++) {\n        const /** @type {?} */ hour = i <= 12 ? i : i - 12;\n        const /** @type {?} */ minute = j;\n        const /** @type {?} */ ampm = i < 12 ? 'AM' : 'PM';\n        allTimes.push(hour + ':' + minute + ' ' + ampm);\n      }\n    }\n    return allTimes;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\npublic ClockMaker (type: 'minute' | 'hour'): Array<any> {\n    const /** @type {?} */ items = [];\n    const /** @type {?} */ timeVal = (type === 'minute') ? 60 : 12;\n    const /** @type {?} */ timeStep = (type === 'minute') ? 5 : 1;\n    const /** @type {?} */ timeStart = (type === 'minute') ? 0 : 1;\n    const /** @type {?} */ r = 124;\n    const /** @type {?} */ j = r - 25;\n\n    for (let /** @type {?} */ min = timeStart; min <= timeVal; min += timeStep) {\n      if (min !== 60) {\n        const /** @type {?} */ str = String(min);\n        const /** @type {?} */ x = j * Math.sin(Math.PI * 2 * (min / timeVal));\n        const /** @type {?} */ y = j * Math.cos(Math.PI * 2 * (min / timeVal));\n\n        items.push({\n          time: str,\n          left: (x + r - 17) + 'px',\n          top: (-y + r - 17) + 'px',\n          type\n        });\n      }\n    }\n    return items;\n  }\n/**\n * @param {?} time\n * @return {?}\n */\npublic TimeToString(time: ITime): string {\n    const { ampm, minute, hour } = time;\n    let /** @type {?} */ hh = ampm === 'PM' ? +hour + 12 : +hour;\n    if (ampm === 'AM' && hh === 12) {\n      hh = 0;\n    }\n    if ( hh === 24) {\n      hh = 12;\n    }\n    hh = hh < 10 ? '0' + hh : /** @type {?} */(( '' + hh as any));\n    const /** @type {?} */ mm = minute < 10 ? '0' + minute : minute;\n    return `${hh}:${mm}`;\n  }\n/**\n * Converts 00:00 format to ITime object\n * @param {?} time\n * @return {?}\n */\npublic StringToTime (time: string): ITime {\n    const [h, m] = time.split(':');\n    let /** @type {?} */ hour = +h > 12 ? +h - 12 : +h;\n    hour = hour === 0 ? 12 : hour;\n    const /** @type {?} */ ampm = +h >= 12 ? 'PM' : 'AM';\n    return {\n      ampm, minute: +m, hour\n    };\n  }\n/**\n * \\@experimental\n * @param {?} ele\n * @param {?} parrentPos\n * @param {?} step\n * @return {?}\n */\npublic CalcDegrees (ele: any, parrentPos: any, step: number): number {\n    const /** @type {?} */ clock = {\n      width: ele.currentTarget.offsetWidth,\n      height: ele.currentTarget.offsetHeight\n    };\n    const /** @type {?} */ targetX = clock.width / 2;\n    const /** @type {?} */ targetY = clock.height / 2;\n    const /** @type {?} */ Vx = Math.round((ele.clientX - parrentPos.left) - targetX);\n    const /** @type {?} */ Vy = Math.round(targetY - (ele.clientY - parrentPos.top));\n    let /** @type {?} */ radians = -Math.atan2(Vy, Vx);\n    radians += 2.5 * Math.PI;\n\n    let /** @type {?} */ degrees = Math.round(radians * 180 / Math.PI);\n    const /** @type {?} */ degMod = degrees % step;\n    if (degMod === 0) {\n      return;\n    } else if (degMod >= step / 2) {\n      degrees = degrees + (step - degMod);\n    } else if (degMod < step / 2) {\n      degrees = degrees - degMod;\n    }\n    return degrees;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AtpCoreService_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpCoreService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpCoreService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { IClockNumber, IDisplayPreference } from '../definitions';\nimport { AtpCoreService } from '../atp-core.service';\nimport { ITime } from '../definitions';\nexport class TimePickerComponent implements OnInit {\n\n  _ref: any;\npublic subject: any = null;\npublic activeModal = false;\npublic timerElement: any;\npublic clockObject: Array<any>;\npublic isClicked: boolean;\npublic clockType: 'minute' | 'hour' = 'hour';\npublic time: ITime = {\n    ampm: 'AM',\n    minute: 0,\n    hour: 12\n  };\npublic nowTime: any = this.time.hour;\npublic degree: any;\npublic config: any;\npublic appRef: any;\npublic isPopup = true;\npublic allowed: any;\npublic preference: IDisplayPreference;\n/**\n * @param {?} core\n */\nconstructor(\nprivate core: AtpCoreService\n  ) { }\n/**\n * @param {?} time\n * @return {?}\n */\npublic ParseStringToTime (time: string): void {\n    time = (time === '' || time === undefined || time === null) ? this.time.hour + ':' + this.time.minute : time;\n    this.time = this.core.StringToTime(time);\n  }\n/**\n * @return {?}\n */\npublic GetTime () {\n    const /** @type {?} */ time = this.core.TimeToString(this.time);\n    this.subject.next(time);\n  }\n\n  clockMaker = () => {\n    const /** @type {?} */ type = this.clockType;\n    this.clockObject = this.core.ClockMaker(type);\n    this.setArrow(null);\n  }\n\n  setActiveTime = () => {\n    this.nowTime = (this.clockType === 'minute' ? this.time.minute : this.time.hour);\n  }\n\n  setArrow = (obj: any) => {\n    if (obj) {\n      this.clockType = obj.type;\n      if (this.clockType === 'minute') {\n        this.time.minute = obj.time;\n      } else {\n        this.time.hour = obj.time;\n      }\n    }\n    const /** @type {?} */ step = (this.clockType === 'minute') ? 6 : 30;\n    const /** @type {?} */ time = (this.clockType === 'minute') ? this.time.minute : this.time.hour;\n    const /** @type {?} */ degrees = time * step;\n    this.rotationClass(degrees);\n    this.setActiveTime();\n  }\n\n  rotationClass = (degrees: any) => {\n    this.degree = degrees;\n  }\n\n  getDegree = (ele: any) => {\n    const /** @type {?} */ step = this.clockType === 'minute' ? 6 : 30;\n    const /** @type {?} */ parrentPos = ele.currentTarget.getBoundingClientRect();\n    if (this.isClicked && (ele.currentTarget === ele.target || ele.target.nodeName === 'BUTTON')) {\n      const /** @type {?} */ clock = {\n        width: ele.currentTarget.offsetWidth,\n        height: ele.currentTarget.offsetHeight\n      };\n      const /** @type {?} */ degrees = this.core.CalcDegrees(ele, parrentPos, step);\n      let /** @type {?} */ hour = this.time.hour, /** @type {?} */\n          minute = this.time.minute;\n\n      if (this.clockType === 'hour') {\n        hour = (degrees / step);\n        hour = (hour > 12) ? hour - 12 : hour;\n      } else if (this.clockType === 'minute') {\n        minute = (degrees / step);\n        minute = (minute > 59) ? minute - 60 : minute;\n      }\n\n      const /** @type {?} */ min = this.config.rangeTime.start, /** @type {?} */\n            max = this.config.rangeTime.end;\n\n      const /** @type {?} */ nowMinHour = +min.split(':')[0] < 12 ? +min.split(':')[0] : +min.split(':')[0] - 12;\n      const /** @type {?} */ nowMaxHour = +max.split(':')[0] < 12 ? +max.split(':')[0] : +max.split(':')[0] - 12;\n      const /** @type {?} */ nowMinMin = +min.split(':')[1];\n      const /** @type {?} */ nowMaxMin = +max.split(':')[1];\n\n      const /** @type {?} */ nowTime = this.GetNowTime(hour, this.time.ampm, minute);\n      if (this.allowed.indexOf(nowTime) > -1) {\n        this.time.hour = hour;\n        this.time.minute = minute;\n        this.rotationClass(degrees);\n        this.setActiveTime();\n      }else if (this.clockType === 'hour' && (hour === nowMinHour && minute <= nowMinMin)) {\n        this.time.hour = nowMinHour;\n        this.time.minute = nowMinMin;\n      }else if (this.clockType === 'hour' && (hour === nowMaxHour && minute >= nowMaxMin)) {\n        this.time.hour = nowMaxHour;\n        this.time.minute = nowMaxMin;\n      }\n    }\n  }\n/**\n * @param {?} hour\n * @param {?} ampm\n * @param {?} minute\n * @return {?}\n */\nprivate GetNowTime (hour: number, ampm: 'AM' | 'PM', minute: number): string {\n    const /** @type {?} */ Hour = (hour === 12 && ampm === 'AM') ? '0' : hour;\n    const /** @type {?} */ nowTime = Hour + ':' + minute + ' ' + ampm;\n    return nowTime;\n  }\n/**\n * @return {?}\n */\ncheckBet() {\n    const /** @type {?} */ nowTime = this.GetNowTime(this.time.hour, this.time.ampm, this.time.minute);\n    if (this.allowed.indexOf(nowTime) === -1) {\n      this.ParseStringToTime(this.config.rangeTime.start);\n      this.setArrow(null);\n      this.setActiveTime();\n    }\n  }\n/**\n * @return {?}\n */\nmodalAnimation() {\n    setTimeout(() => {\n      this.activeModal = true;\n    }, 1);\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.allowed = this.core.allowedTimes (this.config.rangeTime.start, this.config.rangeTime.end);\n    this.clockMaker();\n    this.modalAnimation();\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nClose(e: any) {\n    if (e.target === e.currentTarget) {\n      if (this.isPopup === true) {\n        this.activeModal = false;\n        setTimeout(() => {\n          this.appRef.detachView(this._ref.hostView);\n          this._ref.destroy();\n        }, 400);\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic GetSeparator () {\n    if (this.preference && this.preference.separator) {\n      return this.preference.separator;\n    }\n    return ':';\n  }\n/**\n * @param {?} period\n * @return {?}\n */\npublic GetPeriod (period: 'AM' | 'PM') {\n    if (this.preference && this.preference.period) {\n      return this.preference.period(period);\n    }\n    return period;\n  }\n/**\n * @return {?}\n */\npublic GetMinute () {\n    if (this.preference && this.preference.minute) {\n      return this.preference.minute(this.time.minute);\n    }\n    let /** @type {?} */ min: string = this.time.minute.toString();\n    if (+min < 10) {\n      min = '0' + min;\n    }\n    return min;\n  }\n/**\n * @return {?}\n */\npublic GetHour () {\n    if (this.preference && this.preference.hour) {\n      return this.preference.hour(this.time.hour);\n    }\n    return this.time.hour;\n  }\n/**\n * @param {?} clock\n * @return {?}\n */\npublic GetClockTime(clock: IClockNumber) {\n    if ( ! this.preference) {\n      return clock.time;\n    }\n    if ( this.clockType === 'hour' && this.preference.clockHour) {\n      return this.preference.clockHour(clock.time);\n    }\n    if ( this.clockType === 'minute' && this.preference.clockMinute) {\n      return this.preference.clockMinute(clock.time);\n    }\n    return clock.time;\n  }\n/**\n * @param {?} key\n * @return {?}\n */\npublic GetLabel (key: string) {\n    const /** @type {?} */ defaults = {\n      'ok': 'Ok',\n      'cancel': 'Cancel'\n    };\n    if ((this.preference && this.preference.labels && this.preference.labels.ok)) {\n      defaults.ok = this.preference.labels.ok;\n    }\n    if ((this.preference && this.preference.labels && this.preference.labels.cancel)) {\n      defaults.cancel = this.preference.labels.cancel;\n    }\n    return defaults[key];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'time-picker',\n  template: `\n    <div id=\"time-picker-wrapper\" class=\"{{config.theme}}\" [ngClass]=\"{'active': activeModal, 'static': !isPopup}\" (click)=\"Close($event);\">\n      <div id=\"time-picker\" [ngClass]=\"{'active': activeModal, 'static': !isPopup}\">\n        <div class=\"time-picker-header\">\n          <div class=\"time-picker-selected-time\">\n              <div class=\"time-picker-hour\" (click)=\"clockType='hour';clockMaker()\" \n                [ngClass]=\"{'selected' : clockType == 'hour'}\">{{GetHour()}}</div>\n              <span class=\"time-seprator\">{{GetSeparator()}}</span>\n              <div class=\"time-picker-minute\" (click)=\"clockType='minute';clockMaker()\" \n                [ngClass]=\"{'selected' : clockType == 'minute'}\">{{GetMinute()}}</div>\n          </div>\n          <div class=\"time-picker-selected-ampm\">\n            <div class=\"time-picker-am\" (click)=\"time.ampm = 'AM'; checkBet();\" [ngClass]=\"{'selected' : time.ampm == 'AM'}\">{{GetPeriod('AM')}}</div>\n            <div class=\"time-picker-pm\" (click)=\"time.ampm = 'PM'; checkBet();\" [ngClass]=\"{'selected' : time.ampm == 'PM'}\">{{GetPeriod('PM')}}</div>\n\n          </div>\n        </div>\n        <div class=\"time-picker-content\">\n            <div class=\"time-picker-clock\" (mousemove)=\"getDegree($event);\" (mousedown)=\"isClicked = true;getDegree($event);\" (mouseup)=\"isClicked = false;\">\n              <button *ngFor=\"let clock of clockObject\" [ngClass]=\"{'active' : nowTime == clock.time}\" \n                [id]=\"'timepicker-item-id-' + clock.time\" \n                [ngStyle]=\"{top: clock.top,left: clock.left, color: nowTime == clock.time ? config.arrowStyle.color : config.theme == 'light' ? '#000' : '#eee', background: nowTime == clock.time ? config.arrowStyle.background : 'transparent'}\">\n                {{GetClockTime(clock)}}\n              </button>\n              <div class=\"time-picker-clock-origin\" [ngStyle]=\"{ background: config.arrowStyle.background}\"></div>\n              <div id=\"tpc-arrow\" class=\"time-picker-clock-arrow\" [ngStyle]=\"{transform: 'rotate(' + this.degree + 'deg)','-webkit-transform': 'rotate(' + this.degree + 'deg)', background: config.arrowStyle.background}\">\n                <span [ngStyle]=\"{ background: config.arrowStyle.background }\"></span>\n              </div>\n            </div>\n        </div>\n        <div class=\"time-picker-footer\">\n            <button (click)=\"Close($event);\">{{GetLabel('cancel')}}</button>\n            <button (click)=\"GetTime();Close($event);\" class=\"atp-ref-dialog-close\">{{GetLabel('ok')}}</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    #time-picker-wrapper {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background: transparent;\n      -webkit-transition: background 0.4s;\n      transition: background 0.4s;\n      font-family: 'Roboto', sans-serif;\n      z-index: 1000; }\n      #time-picker-wrapper.static {\n        position: relative !important;\n        background: transparent !important;\n        display: inline-block;\n        z-index: 0; }\n      #time-picker-wrapper.active {\n        background: rgba(0, 0, 0, 0.3); }\n      #time-picker-wrapper.dark #time-picker {\n        background: #424242; }\n        #time-picker-wrapper.dark #time-picker .time-picker-header {\n          border-bottom: none;\n          background: #555555; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.dark #time-picker .time-picker-clock {\n          background: #555555; }\n        #time-picker-wrapper.dark #time-picker .time-picker-footer {\n          border-top: none; }\n          #time-picker-wrapper.dark #time-picker .time-picker-footer button {\n            background: #555555;\n            color: #fff; }\n            #time-picker-wrapper.dark #time-picker .time-picker-footer button:hover {\n              background: #777; }\n      #time-picker-wrapper.light #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.light #time-picker .time-picker-header {\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #000; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #000; }\n        #time-picker-wrapper.light #time-picker .time-picker-clock {\n          background: #ededed; }\n        #time-picker-wrapper.light #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-footer button {\n            background: #f1f1f1; }\n            #time-picker-wrapper.light #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper #time-picker {\n        width: 325px;\n        height: auto;\n        -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n                box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n        border-radius: 2px;\n        margin: 15vh auto !important;\n        -webkit-transform: scale(0.5) !important;\n                transform: scale(0.5) !important;\n        -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: transform 0.3s, opacity 0.3s;\n        transition: transform 0.3s, opacity 0.3s, -webkit-transform 0.3s;\n        opacity: 0; }\n        #time-picker-wrapper #time-picker.static {\n          margin: 0px !important;\n          -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 0 7px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n                  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 0 7px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12); }\n        #time-picker-wrapper #time-picker.active {\n          -webkit-transform: scale(1) !important;\n                  transform: scale(1) !important;\n          opacity: 1; }\n        #time-picker-wrapper #time-picker .time-picker-header {\n          text-align: center;\n          padding: 15px 0px; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time {\n            font-size: 35px;\n            padding: 5px 0px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time div {\n              display: inline-block;\n              cursor: pointer; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm {\n            font-size: 18px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm div {\n              display: inline-block;\n              padding: 0 5px;\n              cursor: pointer; }\n        #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock {\n          width: 200px;\n          height: 200px;\n          padding: 24px;\n          border-radius: 50%;\n          cursor: pointer;\n          margin: 25px auto;\n          position: relative;\n          user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button {\n            border: none;\n            background: transparent;\n            position: absolute;\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            cursor: pointer;\n            font-size: 17px;\n            text-align: center;\n            padding: 0;\n            -webkit-transition: all .2s;\n            transition: all .2s;\n            z-index: 3; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button:hover {\n              background: #fafafa; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button.active {\n              background: blue;\n              color: #fff; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-origin {\n            width: 6px;\n            height: 6px;\n            border-radius: 50%;\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            margin-left: -3px;\n            margin-top: -3px; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow {\n            width: 2px;\n            height: 41%;\n            background: blue;\n            position: absolute;\n            left: 0;\n            top: 22px;\n            right: 0;\n            margin: auto;\n            -webkit-transform-origin: top left;\n            transform-origin: bottom; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow span {\n              width: 8px;\n              height: 8px;\n              border-radius: 50%;\n              position: absolute;\n              top: 0;\n              right: -3px; }\n        #time-picker-wrapper #time-picker .time-picker-footer {\n          padding: 15px;\n          text-align: right; }\n          #time-picker-wrapper #time-picker .time-picker-footer button {\n            border: transparent;\n            margin-left: 10px;\n            padding: 10px;\n            font-size: 14px;\n            border-radius: 2px;\n            cursor: pointer; }\n\n    * {\n      outline: none;\n      -webkit-box-sizing: content-box;\n              box-sizing: content-box; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AtpCoreService, },\n];\n}\n\nfunction TimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerComponent.ctorParameters;\n/** @type {?} */\nTimePickerComponent.prototype._ref;\n/** @type {?} */\nTimePickerComponent.prototype.subject;\n/** @type {?} */\nTimePickerComponent.prototype.activeModal;\n/** @type {?} */\nTimePickerComponent.prototype.timerElement;\n/** @type {?} */\nTimePickerComponent.prototype.clockObject;\n/** @type {?} */\nTimePickerComponent.prototype.isClicked;\n/** @type {?} */\nTimePickerComponent.prototype.clockType;\n/** @type {?} */\nTimePickerComponent.prototype.time;\n/** @type {?} */\nTimePickerComponent.prototype.nowTime;\n/** @type {?} */\nTimePickerComponent.prototype.degree;\n/** @type {?} */\nTimePickerComponent.prototype.config;\n/** @type {?} */\nTimePickerComponent.prototype.appRef;\n/** @type {?} */\nTimePickerComponent.prototype.isPopup;\n/** @type {?} */\nTimePickerComponent.prototype.allowed;\n/** @type {?} */\nTimePickerComponent.prototype.preference;\n/** @type {?} */\nTimePickerComponent.prototype.clockMaker;\n/** @type {?} */\nTimePickerComponent.prototype.setActiveTime;\n/** @type {?} */\nTimePickerComponent.prototype.setArrow;\n/** @type {?} */\nTimePickerComponent.prototype.rotationClass;\n/** @type {?} */\nTimePickerComponent.prototype.getDegree;\n/** @type {?} */\nTimePickerComponent.prototype.core;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ViewChild, ViewContainerRef, Output, ComponentFactoryResolver, OnInit, ApplicationRef, EventEmitter\n} from '@angular/core';\nimport { TimePickerComponent } from '../time-picker/time-picker.component';\nimport { TimePickerConfig } from '../definitions';\nimport { Subject } from 'rxjs/Subject';\nexport class AtpTimePickerComponent implements OnInit {\n   container: ViewContainerRef;\n  \n  timeSelected: EventEmitter<string> = new EventEmitter<string>();\npublic config: TimePickerConfig = {};\n/**\n * @param {?} resolver\n * @param {?} appRef\n */\nconstructor(\nprivate resolver: ComponentFactoryResolver,\nprivate appRef: ApplicationRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    let /** @type {?} */ config = this.config;\n    config = {\n      time: config.time || '00:00',\n      theme: ['light', 'dark'].indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',\n      rangeTime: config.rangeTime || {start: '0:0', end: '24:0'},\n      arrowStyle: config.arrowStyle || {}\n    };\n    config.arrowStyle = {\n      background: (config.arrowStyle.background) ?\n      config.arrowStyle.background : config.theme !== undefined ?\n      config.theme === 'dark' ? 'rgb(128, 203, 196)' : 'blue' : 'blue',\n      color: config.arrowStyle.color || '#fff'\n    };\n    const /** @type {?} */ cfr = this.resolver.resolveComponentFactory(TimePickerComponent);\n    const /** @type {?} */ tsc = this.container.createComponent(cfr);\n    tsc.instance.subject = new Subject<any>();\n    tsc.instance._ref = tsc;\n    tsc.instance.appRef = this.appRef;\n    tsc.instance.timerElement = '';\n    tsc.instance.config = config;\n    tsc.instance.activeModal = true;\n    tsc.instance.isPopup = false;\n    tsc.instance.ParseStringToTime(config.time);\n    tsc.instance.subject.asObservable().subscribe(time => {\n      this.timeSelected.emit(time);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'atp-time-picker',\n  template: `\n    <div #container></div>\n  `,\n  styles: [`\n    .atp-time-picker .icon-container {\n      display: inline-block;\n      margin-right: .2em; }\n      .atp-time-picker .icon-container svg {\n        cursor: pointer;\n        position: relative;\n        top: .5em; }\n      .atp-time-picker .icon-container /deep/ i {\n        cursor: pointer; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n'timeSelected': [{ type: Output },],\n};\n}\n\nfunction AtpTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpTimePickerComponent.ctorParameters;\n/** @type {?} */\nAtpTimePickerComponent.propDecorators;\n/** @type {?} */\nAtpTimePickerComponent.prototype.container;\n/** @type {?} */\nAtpTimePickerComponent.prototype.timeSelected;\n/** @type {?} */\nAtpTimePickerComponent.prototype.config;\n/** @type {?} */\nAtpTimePickerComponent.prototype.resolver;\n/** @type {?} */\nAtpTimePickerComponent.prototype.appRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { IDisplayPreference } from './definitions';\n\nconst /** @type {?} */ arabic = new Intl.NumberFormat('ar-AE');\nconst /** @type {?} */ persian = new Intl.NumberFormat('fa-IR');\n\nexport const /** @type {?} */ PersianPreference: IDisplayPreference = {\n  hour: (x) => persian.format(x),\n  minute: (x) => {\n    let /** @type {?} */ exp = persian.format(x);\n    if (exp.length === 1) {\n      exp = '۰' + exp;\n    }\n    return exp;\n  },\n  separator: ':',\n  period: (x) => x === 'AM' ? 'صبح' : 'عصر',\n  clockHour: (x) => persian.format(x),\n  clockMinute: (x) => persian.format(x),\n  labels: {\n    ok: 'تایید',\n    cancel: 'لغو'\n  }\n};\n\nexport const /** @type {?} */ ArabicPreference: IDisplayPreference = {\n  hour: (x) => arabic.format(x),\n  minute: (x) => {\n    let /** @type {?} */ exp = arabic.format(x);\n    if (exp.length === 1) {\n      exp = '۰' + exp;\n    }\n    return exp;\n  },\n  separator: ':',\n  period: (x) => x === 'AM' ? 'صباحا' : 'مساء',\n  clockHour: (x) => arabic.format(x),\n  clockMinute: (x) => arabic.format(x),\n  labels: {\n    ok: 'حسنا',\n    cancel: 'إلغاء'\n  }\n};\n\nexport const /** @type {?} */ ChinesePreference: IDisplayPreference = {\n  hour:  (x) => x,\n  minute: (x) => {\n    let /** @type {?} */ exp = x;\n    if (exp.length === 1) {\n      exp = '۰' + exp;\n    }\n    return exp;\n  },\n  separator: ':',\n  period: (x) => x === 'AM' ? '上午' : '下午',\n  clockHour: (x) => x,\n  clockMinute: (x) => x,\n  labels: {\n    ok: '好',\n    cancel: '取消'\n  }\n};\n\nexport const /** @type {?} */ Preference = (locale: string): IDisplayPreference => {\n  switch (locale) {\n    case 'fa':\n        return PersianPreference;\n    case 'ar':\n        return ArabicPreference;\n    case 'ch':\n        return ChinesePreference;\n    default:\n      return null;\n  }\n};\n","import { Injectable, ViewContainerRef, Injector, ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef } from '@angular/core';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { TimePickerConfig, IDialogResult } from './definitions';\nimport { Observable } from 'rxjs/Rx';\nimport { Subject } from 'rxjs/Subject';\nimport { Preference } from './preferences';\nexport class AmazingTimePickerService {\n/**\n * @param {?} resolver\n * @param {?} appRef\n * @param {?} injector\n */\nconstructor (\nprivate resolver: ComponentFactoryResolver,\nprivate appRef: ApplicationRef,\nprivate injector: Injector\n  ) {}\n/**\n * @param {?=} config\n * @return {?}\n */\nopen (config?: TimePickerConfig): IDialogResult {\n    const /** @type {?} */ _self = this;\n    config = config || {};\n    config = {\n      time: config.time || '00:00',\n      theme: ['light', 'dark'].indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',\n      rangeTime: config.rangeTime || {start: '0:0', end: '24:0'},\n      arrowStyle: config.arrowStyle || {},\n      locale: config.locale || 'en',\n      preference: config.preference || null\n    };\n    config.rangeTime = {\n      start: config.rangeTime.start || '0:0',\n      end: config.rangeTime.end || '24:0',\n    };\n    config.arrowStyle = {\n      background: (config.arrowStyle.background) ?\n      config.arrowStyle.background : config.theme !== undefined ?\n      config.theme === 'dark' ? 'rgb(128, 203, 196)' : 'blue' : 'blue',\n      color: config.arrowStyle.color || '#fff'\n    };\n    const /** @type {?} */ componentRef = this.resolver.resolveComponentFactory(TimePickerComponent);\n    const /** @type {?} */ tsc = componentRef.create(this.injector);\n    this.appRef.attachView(tsc.hostView);\n    const /** @type {?} */ domElem = /** @type {?} */(( ( /** @type {?} */((tsc.hostView as EmbeddedViewRef<any>))).rootNodes[0] as HTMLElement));\n    document.body.appendChild(domElem);\n    tsc.instance.subject = new Subject<any>();\n    tsc.instance._ref = tsc;\n    tsc.instance.appRef = this.appRef;\n    tsc.instance.timerElement = '';\n    tsc.instance.config = config;\n    if (config.preference) {\n      tsc.instance.preference = config.preference;\n    } else {\n      tsc.instance.preference = Preference(config.locale);\n    }\n    tsc.instance.ParseStringToTime(config.time);\n    return {\n      afterClose: function () {\n        return tsc.instance.subject.asObservable();\n      }\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: Injector, },\n];\n}\n\nfunction AmazingTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nAmazingTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAmazingTimePickerService.ctorParameters;\n/** @type {?} */\nAmazingTimePickerService.prototype.resolver;\n/** @type {?} */\nAmazingTimePickerService.prototype.appRef;\n/** @type {?} */\nAmazingTimePickerService.prototype.injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, Output, EventEmitter, HostListener } from '@angular/core';\nimport { AmazingTimePickerService } from './atp-time-picker.service';\nexport class AtpDirective {\n/**\n * @param {?} viewContainerRef\n * @param {?} atp\n */\nconstructor(\npublic viewContainerRef: ViewContainerRef,\nprivate atp: AmazingTimePickerService\n  ) {}\n\n   myClick = new EventEmitter();\n/**\n * @param {?} e\n * @return {?}\n */\nonClick(e) {\n    const /** @type {?} */ ele = this.viewContainerRef.element.nativeElement;\n    const /** @type {?} */ time = ele.value;\n    const /** @type {?} */ theme = ele.getAttribute('theme');\n    const /** @type {?} */ start = ele.getAttribute('start');\n    const /** @type {?} */ end = ele.getAttribute('end');\n    const /** @type {?} */ locale = ele.getAttribute('locale') || 'en';\n    const /** @type {?} */ preference = ele.getAttribute('preference') || null;\n    let /** @type {?} */ arrowStyle = ele.getAttribute('arrowStyle');\n    arrowStyle = (arrowStyle) ? JSON.parse(arrowStyle.replace(new RegExp('\\'', 'g'), '\"')) : '';\n    const /** @type {?} */ timePickerFunction = this.atp.open({\n      time,\n      theme,\n      rangeTime: { start, end},\n      'arrowStyle': arrowStyle,\n      locale,\n      preference\n    });\n    timePickerFunction.afterClose().subscribe(retTime => {\n      ele.value = retTime;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[atp-time-picker]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: AmazingTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'myClick': [{ type: Output },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction AtpDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpDirective.ctorParameters;\n/** @type {?} */\nAtpDirective.propDecorators;\n/** @type {?} */\nAtpDirective.prototype.myClick;\n/** @type {?} */\nAtpDirective.prototype.viewContainerRef;\n/** @type {?} */\nAtpDirective.prototype.atp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { AtpTimePickerComponent } from './atp-time-picker/atp-time-picker.component';\nimport { AmazingTimePickerService } from './atp-time-picker.service';\nimport { AtpDirective } from './atp.directive';\nimport { AtpCoreService } from './atp-core.service';\nexport class AmazingTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TimePickerComponent,\n    AtpTimePickerComponent,\n    AtpDirective\n  ],\n  providers: [\n    AmazingTimePickerService,\n    AtpCoreService\n  ],\n  entryComponents: [TimePickerComponent],\n  exports: [\n    TimePickerComponent,\n    AtpTimePickerComponent,\n    AtpDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AmazingTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAmazingTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAmazingTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["AtpCoreService","prototype","allowedTimes","min","max","allTimes","nowMinHour","split","nowMaxHour","nowMinMin","nowMaxMin","i","j","jDest","hour","minute","ampm","push","ClockMaker","type","items","timeVal","timeStep","str","String","x","r","Math","sin","PI","y","cos","time","left","top","TimeToString","hh","StringToTime","_a","h","m","CalcDegrees","ele","parrentPos","step","targetX","currentTarget","offsetWidth","targetY","offsetHeight","Vx","round","clientX","Vy","clientY","radians","atan2","degrees","degMod","decorators","Injectable","ctorParameters","TimePickerComponent","core","_this","this","subject","activeModal","clockType","nowTime","isPopup","clockMaker","clockObject","setArrow","setActiveTime","obj","rotationClass","degree","getDegree","getBoundingClientRect","isClicked","target","nodeName","config","rangeTime","start","end","GetNowTime","allowed","indexOf","ParseStringToTime","undefined","GetTime","next","checkBet","modalAnimation","setTimeout","ngOnInit","Close","e","appRef","detachView","_ref","hostView","destroy","GetSeparator","preference","separator","GetPeriod","period","GetMinute","toString","GetHour","GetClockTime","clock","clockHour","clockMinute","GetLabel","key","defaults","ok","cancel","labels","Component","args","selector","template","styles","AtpTimePickerComponent","resolver","timeSelected","EventEmitter","theme","arrowStyle","background","color","cfr","resolveComponentFactory","tsc","container","createComponent","instance","Subject","timerElement","asObservable","subscribe","emit","ComponentFactoryResolver","ApplicationRef","propDecorators","ViewChild","read","ViewContainerRef","Output","arabic","Intl","NumberFormat","persian","PersianPreference","format","exp","length","ArabicPreference","ChinesePreference","AmazingTimePickerService","injector","open","locale","create","attachView","domElem","rootNodes","document","body","appendChild","Preference","afterClose","Injector","AtpDirective","viewContainerRef","atp","myClick","onClick","element","nativeElement","value","getAttribute","JSON","parse","replace","RegExp","retTime","Directive","HostListener","AmazingTimePickerModule","NgModule","imports","CommonModule","declarations","providers","entryComponents","exports"],"mappings":"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"}
