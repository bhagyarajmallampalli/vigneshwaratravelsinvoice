/*!
ng2-dynamic-forms 1.4.31 2017-09-14 12:47 UTC
Copyright (c) 2016-2017, Udo Sch√∂fer http://www.udos86.de

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
import { ChangeDetectorRef, Component, ContentChildren, EventEmitter, Input, NgModule, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';
import { FormGroup, ReactiveFormsModule } from '@angular/forms';
import { DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER, DYNAMIC_FORM_CONTROL_TYPE_ARRAY, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX, DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP, DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER, DYNAMIC_FORM_CONTROL_TYPE_EDITOR, DYNAMIC_FORM_CONTROL_TYPE_GROUP, DYNAMIC_FORM_CONTROL_TYPE_INPUT, DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP, DYNAMIC_FORM_CONTROL_TYPE_RATING, DYNAMIC_FORM_CONTROL_TYPE_SELECT, DYNAMIC_FORM_CONTROL_TYPE_SLIDER, DYNAMIC_FORM_CONTROL_TYPE_SWITCH, DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA, DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER, DynamicFormComponent, DynamicFormControlComponent, DynamicFormControlModel, DynamicFormValidationService, DynamicFormsCoreModule, DynamicTemplateDirective, Utils } from '@ng2-dynamic-forms/core';
import { AutoComplete, AutoCompleteModule, CalendarModule, CheckboxModule, Chips, ChipsModule, Dropdown, DropdownModule, EditorModule, InputMaskModule, InputSwitchModule, InputTextModule, InputTextareaModule, MultiSelectModule, RadioButtonModule, RatingModule, SliderModule, SpinnerModule } from 'primeng/primeng';
import { CommonModule } from '@angular/common';

var PRIME_NG_VIEW_CHILD_SELECTOR = "pAutoComplete,pCalendar,pCheckbox,pChips,pDropdown,pEditor,pInputMask,\npInputSwitch,pInputText,pMultiSelect,pRating,pSlider,pSpinner,pInputTextarea";
var PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES = {
    itemTemplate: "itemTemplate",
    selectedItemTemplate: "selectedItemTemplate"
};
var PRIME_NG_CHIPS_TEMPLATE_DIRECTIVES = {
    itemTemplate: "itemTemplate"
};
var PRIME_NG_DROPDOWN_LIST_TEMPLATE_DIRECTIVES = {
    itemTemplate: "itemTemplate"
};

var __extends$1 = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var DynamicPrimeNGFormControlComponent = /** @class */ (function (_super) {
    __extends$1(DynamicPrimeNGFormControlComponent, _super);
    function DynamicPrimeNGFormControlComponent(changeDetectorRef, validationService) {
        var _this = _super.call(this, changeDetectorRef, validationService) || this;
        _this.changeDetectorRef = changeDetectorRef;
        _this.validationService = validationService;
        _this.bindId = true;
        _this.context = null;
        _this.hasErrorMessaging = false;
        _this.blur = new EventEmitter();
        _this.change = new EventEmitter();
        _this.focus = new EventEmitter();
        return _this;
    }
    DynamicPrimeNGFormControlComponent_1 = DynamicPrimeNGFormControlComponent;
    DynamicPrimeNGFormControlComponent.prototype.ngOnChanges = function (changes) {
        _super.prototype.ngOnChanges.call(this, changes);
        if (changes["model"]) {
            this.type = DynamicPrimeNGFormControlComponent_1.getFormControlType(this.model);
        }
    };
    DynamicPrimeNGFormControlComponent.prototype.setTemplateDirective = function (directive) {
        var _this = this;
        if (this.pViewChild && (directive.modelId === this.model.id || directive.modelType === this.model.type)) {
            var templateDirectives_1 = DynamicPrimeNGFormControlComponent_1.getTemplateDirectives(this.pViewChild);
            Object.keys(templateDirectives_1 || {}).forEach(function (key) {
                if (templateDirectives_1[key] === directive.as) {
                    _this.pViewChild[key] = directive.templateRef;
                }
            });
        }
    };
    DynamicPrimeNGFormControlComponent.prototype.setTemplates = function () {
        var _this = this;
        _super.prototype.setTemplates.call(this);
        this.templates
            .filter(function (directive) { return Utils.isString(directive.as); })
            .forEach(function (directive) { return _this.setTemplateDirective(directive); });
    };
    DynamicPrimeNGFormControlComponent.prototype.onAutoComplete = function (_$event) {
        var inputModel = this.model;
        if (Array.isArray(inputModel.list)) {
            this.suggestions = inputModel.list.map(function (item) { return item; });
        }
    };
    DynamicPrimeNGFormControlComponent.getFormControlType = function (model) {
        switch (model.type) {
            case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:
                return 1 /* Array */;
            case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:
                return 4 /* Checkbox */;
            case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:
            case DYNAMIC_FORM_CONTROL_TYPE_GROUP:
                return 8 /* Group */;
            case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:
            case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:
                return 3 /* Calendar */;
            case DYNAMIC_FORM_CONTROL_TYPE_EDITOR:
                return 7 /* Editor */;
            case DYNAMIC_FORM_CONTROL_TYPE_INPUT:
                var inputModel = model;
                if (inputModel.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER) {
                    return 16 /* Spinner */;
                }
                else if (inputModel.mask) {
                    return 10 /* InputMask */;
                }
                else if (Array.isArray(inputModel.list)) {
                    return 2 /* AutoComplete */;
                }
                else if (inputModel.multiple) {
                    return 5 /* Chips */;
                }
                else {
                    return 9 /* Input */;
                }
            case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:
                return 13 /* RadioGroup */;
            case DYNAMIC_FORM_CONTROL_TYPE_RATING:
                return 14 /* Rating */;
            case DYNAMIC_FORM_CONTROL_TYPE_SELECT:
                var selectModel = model;
                return selectModel.multiple ? 12 /* MultiSelect */ : 6 /* Dropdown */;
            case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:
                return 15 /* Slider */;
            case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:
                return 11 /* InputSwitch */;
            case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:
                return 17 /* TextArea */;
            default:
                return null;
        }
    };
    DynamicPrimeNGFormControlComponent.getTemplateDirectives = function (component) {
        switch (component.constructor) {
            case AutoComplete:
                return PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES;
            case Chips:
                return PRIME_NG_CHIPS_TEMPLATE_DIRECTIVES;
            case Dropdown:
                return PRIME_NG_DROPDOWN_LIST_TEMPLATE_DIRECTIVES;
            default:
                return null;
        }
    };
    __decorate$1([
        ContentChildren(DynamicTemplateDirective),
        __metadata$1("design:type", QueryList)
    ], DynamicPrimeNGFormControlComponent.prototype, "contentTemplates", void 0);
    __decorate$1([
        Input("templates"),
        __metadata$1("design:type", QueryList)
    ], DynamicPrimeNGFormControlComponent.prototype, "inputTemplates", void 0);
    __decorate$1([
        Input(),
        __metadata$1("design:type", Boolean)
    ], DynamicPrimeNGFormControlComponent.prototype, "bindId", void 0);
    __decorate$1([
        Input(),
        __metadata$1("design:type", Object)
    ], DynamicPrimeNGFormControlComponent.prototype, "context", void 0);
    __decorate$1([
        Input(),
        __metadata$1("design:type", FormGroup)
    ], DynamicPrimeNGFormControlComponent.prototype, "group", void 0);
    __decorate$1([
        Input(),
        __metadata$1("design:type", Boolean)
    ], DynamicPrimeNGFormControlComponent.prototype, "hasErrorMessaging", void 0);
    __decorate$1([
        Input(),
        __metadata$1("design:type", DynamicFormControlModel)
    ], DynamicPrimeNGFormControlComponent.prototype, "model", void 0);
    __decorate$1([
        Output(),
        __metadata$1("design:type", EventEmitter)
    ], DynamicPrimeNGFormControlComponent.prototype, "blur", void 0);
    __decorate$1([
        Output(),
        __metadata$1("design:type", EventEmitter)
    ], DynamicPrimeNGFormControlComponent.prototype, "change", void 0);
    __decorate$1([
        Output(),
        __metadata$1("design:type", EventEmitter)
    ], DynamicPrimeNGFormControlComponent.prototype, "focus", void 0);
    __decorate$1([
        ViewChild(PRIME_NG_VIEW_CHILD_SELECTOR),
        __metadata$1("design:type", Object)
    ], DynamicPrimeNGFormControlComponent.prototype, "pViewChild", void 0);
    DynamicPrimeNGFormControlComponent = DynamicPrimeNGFormControlComponent_1 = __decorate$1([
        Component({
            selector: "dynamic-primeng-form-control,dynamic-form-primeng-control",
            template: "<div [formGroup]=\"group\" [ngClass]=\"[model.cls.element.container, model.cls.grid.container]\"><div *ngIf=\"type !== 4 && model.label\" [ngClass]=\"model.cls.grid.label\"><label [attr.for]=\"model.id\" [innerHTML]=\"model.label\" [ngClass]=\"model.cls.element.label\"></label></div><ng-container *ngIf=\"type !== 1 && template?.align === 'START'\"><ng-container *ngTemplateOutlet=\"template?.templateRef; context: model\"></ng-container></ng-container><div *ngIf=\"type === 8\" role=\"group\" [dynamicId]=\"bindId && model.id\" [formGroupName]=\"model.id\" [ngClass]=\"[model.cls.element.control, model.cls.grid.control]\"><dynamic-primeng-form-control *ngFor=\"let controlModel of model.group\" [group]=\"control\" [hasErrorMessaging]=\"controlModel.hasErrorMessages\" [model]=\"controlModel\" [templates]=\"templates\" [ngClass]=\"[controlModel.cls.element.host, controlModel.cls.grid.host]\" (blur)=\"onFocusChange($event)\" (change)=\"onValueChange($event)\" (focus)=\"onFocusChange($event)\"></dynamic-primeng-form-control></div><div *ngIf=\"type === 13\" role=\"radiogroup\" [attr.tabindex]=\"model.tabIndex\" [dynamicId]=\"bindId && model.id\" [ngClass]=\"[model.cls.element.control, model.cls.grid.control]\" (change)=\"onValueChange($event)\"><div *ngFor=\"let option of model.options$ | async\" [ngClass]=\"model.cls.grid.option\"><p-radioButton [formControlName]=\"model.id\" [label]=\"option.label\" [name]=\"model.name\" [ngClass]=\"model.cls.element.option\" [value]=\"option.value\"></p-radioButton></div></div><ng-container *ngIf=\"type !== 8 && type !== 13\"><div [ngClass]=\"model.cls.grid.control\" [ngSwitch]=\"type\"><div *ngSwitchCase=\"1\" [dynamicId]=\"bindId && model.id\" [formArrayName]=\"model.id\" [ngClass]=\"model.cls.element.control\"><div *ngFor=\"let groupModel of model.groups; let idx = index\" role=\"group\" [formGroupName]=\"idx\" [ngClass]=\"[model.cls.element.group, model.cls.grid.group]\"><dynamic-primeng-form-control *ngFor=\"let controlModel of groupModel.group\" [bindId]=\"false\" [context]=\"groupModel\" [group]=\"control.at(idx)\" [hasErrorMessaging]=\"controlModel.hasErrorMessages\" [model]=\"controlModel\" [templates]=\"templates\" [ngClass]=\"[controlModel.cls.element.host, controlModel.cls.grid.host]\" (blur)=\"onFocusChange($event)\" (change)=\"onValueChange($event)\" (focus)=\"onFocusChange($event)\"></dynamic-primeng-form-control><ng-container *ngTemplateOutlet=\"template?.templateRef; context: groupModel\"></ng-container></div></div><p-autoComplete *ngSwitchCase=\"2\" #pAutoComplete [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [multiple]=\"model.multiple\" [ngClass]=\"model.cls.element.control\" [placeholder]=\"model.placeholder\" [suggestions]=\"suggestions\" [tabindex]=\"model.tabIndex\" (onBlur)=\"onFocusChange($event)\" (change)=\"onValueChange($event)\" (onFocus)=\"onFocusChange($event)\" (completeMethod)=\"onAutoComplete($event)\"></p-autoComplete><p-calendar *ngSwitchCase=\"3\" #pCalendar [dateFormat]=\"model.format\" [defaultDate]=\"model.focusedDate\" [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [inline]=\"model.inline\" [maxDate]=\"model.max\" [minDate]=\"model.min\" [monthNavigator]=\"false\" [ngClass]=\"model.cls.element.control\" [placeholder]=\"model.placeholder\" [showIcon]=\"true\" [showSeconds]=\"model.showSeconds\" [tabindex]=\"model.tabIndex\" [timeOnly]=\"model.type === 'TIMEPICKER'\" [yearNavigator]=\"false\" (onBlur)=\"onFocusChange($event)\" (onFocus)=\"onFocusChange($event)\"></p-calendar><p-checkbox *ngSwitchCase=\"4\" #pCheckbox binary=\"true\" [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [label]=\"model.label\" [name]=\"model.name\" [ngClass]=\"model.cls.element.control\" [tabindex]=\"model.tabIndex\" [value]=\"model.value\" (onChange)=\"onValueChange($event)\"></p-checkbox><p-chips *ngSwitchCase=\"5\" #pChips [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [ngClass]=\"model.cls.element.control\" [tabindex]=\"model.tabIndex\" (change)=\"onValueChange($event)\"></p-chips><p-dropdown *ngSwitchCase=\"6\" #pDropdown [dynamicId]=\"bindId && model.id\" [filter]=\"model.filterable\" [formControlName]=\"model.id\" [ngClass]=\"model.cls.element.control\" [options]=\"model.options\" [tabindex]=\"model.tabIndex\" (onBlur)=\"onFocusChange($event)\" (onChange)=\"onValueChange($event)\" (onFocus)=\"onFocusChange($event)\"></p-dropdown><p-editor *ngSwitchCase=\"7\" #pEditor [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [ngClass]=\"model.cls.element.control\" (onTextChange)=\"onValueChange($event)\"></p-editor><ng-container *ngSwitchCase=\"9\"><input pInputText #pInputText [attr.accept]=\"model.accept\" [attr.autoComplete]=\"model.autoComplete\" [attr.list]=\"model.listId\" [attr.max]=\"model.max\" [attr.min]=\"model.min\" [attr.multiple]=\"model.multiple\" [attr.step]=\"model.step\" [attr.tabindex]=\"model.tabIndex\" [autofocus]=\"model.autoFocus\" [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [maxlength]=\"model.maxLength\" [minlength]=\"model.minLength\" [name]=\"model.name\" [ngClass]=\"model.cls.element.control\" [pattern]=\"model.pattern\" [placeholder]=\"model.placeholder\" [readonly]=\"model.readOnly\" [required]=\"model.required\" [spellcheck]=\"model.spellCheck\" [type]=\"model.inputType\" (blur)=\"onFocusChange($event)\" (change)=\"onValueChange($event)\" (focus)=\"onFocusChange($event)\"><datalist *ngIf=\"model.list\" [id]=\"model.listId\"><option *ngFor=\"let option of model.list\" [value]=\"option\"></option></datalist></ng-container><p-inputMask *ngSwitchCase=\"10\" #pInputMask [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [mask]=\"model.mask\" [ngClass]=\"model.cls.element.control\" [placeholder]=\"model.placeholder\" [readonly]=\"model.readOnly\" [tabindex]=\"model.tabIndex\" (onBlur)=\"onFocusChange($event)\" (onChange)=\"onValueChange($event)\" (onFocus)=\"onFocusChange($event)\"></p-inputMask><p-inputSwitch *ngSwitchCase=\"11\" #pInputSwitch [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [ngClass]=\"model.cls.element.control\" [onLabel]=\"model.onLabel\" [offLabel]=\"model.offLabel\" [tabindex]=\"model.tabIndex\" (onChange)=\"onValueChange($event)\"></p-inputSwitch><p-multiSelect *ngSwitchCase=\"12\" #pMultiSelect [dynamicId]=\"bindId && model.id\" [filter]=\"model.filterable\" [formControlName]=\"model.id\" [ngClass]=\"model.cls.element.control\" [options]=\"model.options\" [tabindex]=\"model.tabIndex\" (onBlur)=\"onFocusChange($event)\" (onChange)=\"onValueChange($event)\" (onFocus)=\"onFocusChange($event)\"></p-multiSelect><p-rating *ngSwitchCase=\"14\" #pRating [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [ngClass]=\"model.cls.element.control\" [stars]=\"model.max\" (onRate)=\"onValueChange($event)\"></p-rating><p-slider *ngSwitchCase=\"15\" #pSlider [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [min]=\"model.min\" [max]=\"model.max\" [ngClass]=\"model.cls.element.control\" [step]=\"model.step\" (onChange)=\"onValueChange($event)\"></p-slider><p-spinner *ngSwitchCase=\"16\" #pSpinner [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [min]=\"model.min\" [max]=\"model.max\" [ngClass]=\"model.cls.element.control\" [placeholder]=\"model.placeholder\" [step]=\"model.step || 1\" [tabindex]=\"model.tabIndex\" (onBlur)=\"onFocusChange($event)\" (onChange)=\"onValueChange($event)\" (onFocus)=\"onFocusChange($event)\"></p-spinner><textarea *ngSwitchCase=\"17\" pInputTextarea #pInputTextarea [attr.tabindex]=\"model.tabIndex\" [cols]=\"model.cols\" [dynamicId]=\"bindId && model.id\" [formControlName]=\"model.id\" [maxlength]=\"model.maxLength\" [minlength]=\"model.minLength\" [name]=\"model.name\" [ngClass]=\"model.cls.element.control\" [placeholder]=\"model.placeholder\" [readonly]=\"model.readOnly\" [required]=\"model.required\" [rows]=\"model.rows\" [spellcheck]=\"model.spellCheck\" [wrap]=\"model.wrap\" (blur)=\"onFocusChange($event)\" (change)=\"onValueChange($event)\" (focus)=\"onFocusChange($event)\"></textarea></div></ng-container><ul *ngIf=\"showErrorMessages\" [ngClass]=\"[model.cls.element.errors, model.cls.grid.errors]\"><li *ngFor=\"let message of errorMessages\" class=\"ui-message ui-messages-error ui-corner-all\">{{ message }}</li></ul><ng-container *ngIf=\"type !== 1 && template?.align === 'END'\"><ng-container *ngTemplateOutlet=\"template?.templateRef; context: model\"></ng-container></ng-container></div>"
        }),
        __metadata$1("design:paramtypes", [ChangeDetectorRef,
            DynamicFormValidationService])
    ], DynamicPrimeNGFormControlComponent);
    return DynamicPrimeNGFormControlComponent;
    var DynamicPrimeNGFormControlComponent_1;
}(DynamicFormControlComponent));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var DynamicPrimeNGFormComponent = /** @class */ (function (_super) {
    __extends(DynamicPrimeNGFormComponent, _super);
    function DynamicPrimeNGFormComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.blur = new EventEmitter();
        _this.change = new EventEmitter();
        _this.focus = new EventEmitter();
        return _this;
    }
    __decorate([
        Input(),
        __metadata("design:type", FormGroup)
    ], DynamicPrimeNGFormComponent.prototype, "group", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], DynamicPrimeNGFormComponent.prototype, "model", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DynamicPrimeNGFormComponent.prototype, "blur", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DynamicPrimeNGFormComponent.prototype, "change", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], DynamicPrimeNGFormComponent.prototype, "focus", void 0);
    __decorate([
        ContentChildren(DynamicTemplateDirective),
        __metadata("design:type", QueryList)
    ], DynamicPrimeNGFormComponent.prototype, "templates", void 0);
    __decorate([
        ViewChildren(DynamicPrimeNGFormControlComponent),
        __metadata("design:type", QueryList)
    ], DynamicPrimeNGFormComponent.prototype, "components", void 0);
    DynamicPrimeNGFormComponent = __decorate([
        Component({
            selector: "dynamic-primeng-form",
            template: "<dynamic-primeng-form-control *ngFor=\"let controlModel of model; trackBy: trackByFn\" [group]=\"group\" [hasErrorMessaging]=\"controlModel.hasErrorMessages\" [model]=\"controlModel\" [ngClass]=\"[controlModel.cls.element.host, controlModel.cls.grid.host]\" [templates]=\"templates\" (blur)=\"onEvent($event, 0)\" (change)=\"onEvent($event, 1)\" (focus)=\"onEvent($event, 2)\"></dynamic-primeng-form-control>"
        })
    ], DynamicPrimeNGFormComponent);
    return DynamicPrimeNGFormComponent;
}(DynamicFormComponent));

var __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DynamicFormsPrimeNGUIModule = /** @class */ (function () {
    function DynamicFormsPrimeNGUIModule() {
    }
    DynamicFormsPrimeNGUIModule = __decorate$2([
        NgModule({
            imports: [
                CommonModule,
                ReactiveFormsModule,
                DynamicFormsCoreModule,
                AutoCompleteModule,
                CalendarModule,
                CheckboxModule,
                ChipsModule,
                DropdownModule,
                EditorModule,
                InputMaskModule,
                InputSwitchModule,
                InputTextModule,
                InputTextareaModule,
                MultiSelectModule,
                RadioButtonModule,
                RatingModule,
                SliderModule,
                SpinnerModule
            ],
            declarations: [
                DynamicPrimeNGFormControlComponent,
                DynamicPrimeNGFormComponent
            ],
            exports: [
                DynamicFormsCoreModule,
                DynamicPrimeNGFormControlComponent,
                DynamicPrimeNGFormComponent
            ]
        })
    ], DynamicFormsPrimeNGUIModule);
    return DynamicFormsPrimeNGUIModule;
}());

export { DynamicPrimeNGFormComponent, PRIME_NG_VIEW_CHILD_SELECTOR, PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES, PRIME_NG_CHIPS_TEMPLATE_DIRECTIVES, PRIME_NG_DROPDOWN_LIST_TEMPLATE_DIRECTIVES, DynamicPrimeNGFormControlComponent, DynamicFormsPrimeNGUIModule };
