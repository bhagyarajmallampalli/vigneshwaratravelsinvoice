{"version":3,"sources":["ui-primeng/src/dynamic-primeng-form-control.component.ts"],"names":[],"mappings":"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","file":"dynamic-primeng-form-control.component.js","sourcesContent":["import {\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    QueryList,\n    SimpleChanges,\n    ViewChild\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport {\n    AutoComplete,\n    Calendar,\n    Checkbox,\n    Chips,\n    Dropdown,\n    Editor,\n    InputMask,\n    InputSwitch,\n    MultiSelect,\n    Rating,\n    Slider,\n    Spinner\n} from \"primeng/primeng\";\nimport {\n    DynamicFormValidationService,\n    DynamicFormControlComponent,\n    DynamicFormControlModel,\n    DynamicFormArrayGroupModel,\n    DynamicFormControlEvent,\n    DynamicTemplateDirective,\n    DynamicInputModel,\n    DynamicSelectModel,\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX,\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_EDITOR,\n    DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER,\n    DYNAMIC_FORM_CONTROL_TYPE_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_INPUT,\n    DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER,\n    DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_RATING,\n    DYNAMIC_FORM_CONTROL_TYPE_SELECT,\n    DYNAMIC_FORM_CONTROL_TYPE_SLIDER,\n    DYNAMIC_FORM_CONTROL_TYPE_SWITCH,\n    DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA,\n    DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER,\n    Utils\n} from \"@ng2-dynamic-forms/core\";\nimport {\n    PrimeNGFormControlType,\n    PRIME_NG_VIEW_CHILD_SELECTOR,\n    PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES,\n    PRIME_NG_CHIPS_TEMPLATE_DIRECTIVES,\n    PRIME_NG_DROPDOWN_LIST_TEMPLATE_DIRECTIVES\n} from \"./dynamic-primeng-form.const\";\n\nexport type PrimeNGFormControlComponent = AutoComplete | Calendar | Checkbox | Chips | Dropdown | Editor | InputMask |\n    InputSwitch | MultiSelect | Rating | Slider | Spinner;\n\n@Component({\n    selector: \"dynamic-primeng-form-control,dynamic-form-primeng-control\",\n    templateUrl: \"./dynamic-primeng-form-control.component.html\"\n})\nexport class DynamicPrimeNGFormControlComponent extends DynamicFormControlComponent implements OnChanges {\n\n    @ContentChildren(DynamicTemplateDirective) contentTemplates: QueryList<DynamicTemplateDirective>;\n    @Input(\"templates\") inputTemplates: QueryList<DynamicTemplateDirective>;\n\n    @Input() bindId: boolean = true;\n    @Input() context: DynamicFormArrayGroupModel | null = null;\n    @Input() group: FormGroup;\n    @Input() hasErrorMessaging: boolean = false;\n    @Input() model: DynamicFormControlModel;\n\n    @Output() blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output() change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output() focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n\n    @ViewChild(PRIME_NG_VIEW_CHILD_SELECTOR) pViewChild: PrimeNGFormControlComponent | undefined;\n\n    suggestions: string[];\n\n    type: PrimeNGFormControlType | null;\n\n    constructor(protected changeDetectorRef: ChangeDetectorRef,\n                protected validationService: DynamicFormValidationService) {\n\n        super(changeDetectorRef, validationService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n\n        if (changes[\"model\"]) {\n            this.type = DynamicPrimeNGFormControlComponent.getFormControlType(this.model);\n        }\n    }\n\n    protected setTemplateDirective(directive: DynamicTemplateDirective): void {\n\n        if (this.pViewChild && (directive.modelId === this.model.id || directive.modelType === this.model.type)) {\n\n            let templateDirectives: any = DynamicPrimeNGFormControlComponent.getTemplateDirectives(this.pViewChild);\n\n            Object.keys(templateDirectives || {}).forEach((key: string) => {\n\n                if (templateDirectives[key] === directive.as) {\n                    (this.pViewChild as any)[key] = directive.templateRef;\n                }\n            });\n        }\n    }\n\n    protected setTemplates(): void {\n\n        super.setTemplates();\n\n        this.templates\n            .filter(directive => Utils.isString(directive.as))\n            .forEach(directive => this.setTemplateDirective(directive));\n    }\n\n    onAutoComplete(_$event: any): void {\n        let inputModel = this.model as DynamicInputModel;\n\n        if(Array.isArray(inputModel.list)) {\n            this.suggestions = inputModel.list.map(item => item);\n        }\n    }\n\n    static getFormControlType(model: DynamicFormControlModel): PrimeNGFormControlType | null {\n\n        switch (model.type) {\n\n            case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                return PrimeNGFormControlType.Array;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n                return PrimeNGFormControlType.Checkbox;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n            case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                return PrimeNGFormControlType.Group;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n            case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\n                return PrimeNGFormControlType.Calendar;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_EDITOR:\n                return PrimeNGFormControlType.Editor;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n                let inputModel = model as DynamicInputModel;\n\n                if (inputModel.inputType === DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER) {\n                    return PrimeNGFormControlType.Spinner;\n\n                } else if (inputModel.mask) {\n                    return PrimeNGFormControlType.InputMask;\n\n                } else if (Array.isArray(inputModel.list)) {\n                    return PrimeNGFormControlType.AutoComplete;\n\n                } else if (inputModel.multiple) {\n                    return PrimeNGFormControlType.Chips;\n\n                } else {\n                    return PrimeNGFormControlType.Input;\n                }\n\n            case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n                return PrimeNGFormControlType.RadioGroup;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_RATING:\n                return PrimeNGFormControlType.Rating;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n                let selectModel = model as DynamicSelectModel<any>;\n\n                return selectModel.multiple ? PrimeNGFormControlType.MultiSelect : PrimeNGFormControlType.Dropdown;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n                return PrimeNGFormControlType.Slider;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n                return PrimeNGFormControlType.InputSwitch;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n                return PrimeNGFormControlType.TextArea;\n\n            default:\n                return null;\n        }\n    }\n\n    static getTemplateDirectives(component: PrimeNGFormControlComponent): any | null {\n\n        switch (component.constructor) {\n\n            case AutoComplete:\n                return PRIME_NG_AUTOCOMPLETE_TEMPLATE_DIRECTIVES;\n\n            case Chips:\n                return PRIME_NG_CHIPS_TEMPLATE_DIRECTIVES;\n\n            case Dropdown:\n                return PRIME_NG_DROPDOWN_LIST_TEMPLATE_DIRECTIVES;\n\n            default:\n                return null;\n        }\n    }\n}"]}